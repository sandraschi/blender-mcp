name: Release

on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.12"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --dev

      - name: Build package
        run: uv build

      - name: Check package
        run: uv run twine check dist/*

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install MCPB CLI
        run: npm install -g @anthropic-ai/mcpb

      - name: Build MCPB package
        run: |
          if command -v mcpb >/dev/null 2>&1; then
            cd mcpb
            mcpb pack . ../dist/blender-mcp.mcpb
          else
            cd mcpb
            zip -r ../dist/blender-mcp.mcpb . -x "*.git*"
          fi

      - name: Generate changelog
        id: changelog
        run: |
          if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
            PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
            CHANGELOG=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --reverse)
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Extract version
        id: version
        run: |
          VERSION="${{ github.ref_name }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Blender MCP ${{ steps.version.outputs.version }}
          body: |
            ## ðŸš€ What's New

            ${{ steps.changelog.outputs.changelog }}

            ## ðŸ“¦ Installation

            ### MCP Package
            Download `blender-mcp.mcpb` and install in Claude Desktop

            ### Python Package
            ```bash
            pip install blender-mcp==${{ steps.version.outputs.version_number }}
            ```
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'rc') }}
          files: |
            dist/*.mcpb
            dist/*.whl
            dist/*.tar.gz

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: release
    # Only publish stable releases (not alpha/beta/rc)
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')
    environment: pypi
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
